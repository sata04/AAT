[project]
name = "AAT"
version = "9.1.0"
description = "Acceleration Analysis Tool for microgravity experiments"
authors = [
    {name = "AAT Development Team"}
]
requires-python = ">=3.9"
dependencies = [
    "PyQt6",
    "matplotlib",
    "numpy",
    "pandas",
    "pandas-stubs",
    "openpyxl",
    "tables",
]

[tool.setuptools.packages.find]
include = ["core", "gui"]
exclude = ["tests*", "config*"]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.0.0",
    "pytest-mock>=3.10.0",
]

[tool.ruff]
# Set line length to 120 (more relaxed than Black default)
line-length = 120

# Target Python version
target-version = "py39"

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
    "results_AAT/cache",
]

[tool.ruff.lint]
# Enable key rule sets
select = [
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "I",   # isort
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
]

# Ignore specific rules that might be too strict for this project
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "SIM102", # Use a single if-statement instead of nested if-statements
]

# Allow autofix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Allow print statements in main.py
"main.py" = ["T201"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Use spaces for indentation
indent-style = "space"

# Enable formatting of code examples in docstrings
docstring-code-format = true

# Set docstring code line length to dynamic
docstring-code-line-length = "dynamic"

[dependency-groups]
dev = [
    "ruff>=0.12.3",
]

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["core", "gui"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=core",
    "--cov=gui",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gui: marks tests that require GUI (Qt) functionality",
]
qt_api = "pyqt6"
